{"version":3,"sources":["components/Header.js","pages/HomePage.js","pages/FavoritesPage.js","components/Main.js","components/Sidebar.js","constants.js","helpers.js","components/PetList.js","components/Pet.js","components/Filters.js","components/Search.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","href","id","to","HomePage","props","filterPets","breed","setState","activeFilter","search","val","searchValue","state","document","title","onFilterPets","this","onSearch","React","Component","FavoritesPage","Main","exact","path","component","Sidebar","breedOptions","stringContains","str","toLowerCase","indexOf","PetList","pets","_pets","filter","pet","filteredPet","name","yukleniyor","fetch","rootApiURL","then","resp","json","data","prevProps","Yukleniyor","EmptyPets","Pets","map","key","Math","random","length","Pet","image","age","description","src","alt","style","height","fontSize","Filters","console","log","classNames","onClick","e","preventDefault","Search","changeValue","target","value","type","onChange","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e0c46244.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <div className=\"container\">\r\n                    <a className=\"navbar-brand\" href=\"#\">Pets</a>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/\">HomePage</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/favoriler\">Favoriler</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport {Sidebar, PetList} from \"../components\";\r\n\r\n\r\nclass HomePage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            activeFilter: \"\",\r\n            searchValue: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Home Page\";\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.title = \"Pets App\";\r\n    }\r\n\r\n    filterPets = (breed) => {\r\n        this.setState({\r\n            activeFilter: breed\r\n        });\r\n    }\r\n\r\n    search = (val) => {\r\n        this.setState({\r\n            searchValue: val\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-3\">\r\n                            <Sidebar\r\n                                onFilterPets={this.filterPets}\r\n                                activeFilter={this.state.activeFilter}\r\n                                onSearch={this.search}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-lg-9\">\r\n                            <PetList\r\n                                activeFilter={this.state.activeFilter}\r\n                                searchValue={this.state.searchValue}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\n\r\nfunction FavoritesPage() {\r\n    return (\r\n        <div>\r\n            FavoritesPage\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FavoritesPage;\r\n","import React from 'react';\r\nimport {Route, Switch} from \"react-router\";\r\nimport {FavoritesPage, HomePage} from \"../pages\";\r\n\r\nfunction Main(props) {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={HomePage}/>\r\n                <Route exact path=\"/favoriler\" component={FavoritesPage}/>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport {Filters} from \"../components\";\r\nimport {Search} from \"../components\";\r\n\r\nfunction Sidebar(props) {\r\n    return (\r\n        <div>\r\n            <Search onSearch={props.onSearch} />\r\n            <Filters\r\n                onFilterPets={props.onFilterPets}\r\n                activeFilter={props.activeFilter}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\n\r\nconst rootApiURL = \"http://5dd7af92505c590014d3b4ac.mockapi.io/\";\r\n\r\nconst petsPath = \"pets\";\r\n\r\nexport const getPets = () => {\r\n    return fetch(rootApiURL + petsPath)\r\n        .then((resp) => resp.json())\r\n};\r\n\r\nexport const breedOptions = [\r\n    \"Cavalier King Charles Spaniel\",\r\n    \"Golden Retriever\",\r\n    \"Beagle\",\r\n    \"French Bulldog\"\r\n];","export const stringContains = (str, search) => {\r\n    return str.toLowerCase().indexOf(search.toLowerCase()) > -1;\r\n};","import React from 'react';\r\nimport {Pet} from \"../components\";\r\nimport {getPets} from \"../constants\";\r\nimport {stringContains} from \"../helpers\";\r\n\r\n\r\nclass PetList extends React.Component{\r\n    breed;\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            _pets: [],\r\n            pets: [],\r\n            yukleniyor: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        getPets().then((data) => {\r\n            this.setState({\r\n                _pets: data,\r\n                pets: data,\r\n                yukleniyor: false\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.activeFilter !== this.props.activeFilter){\r\n            this.filterPets();\r\n        }\r\n        if(prevProps.searchValue !== this.props.searchValue){\r\n            this.filterPets();\r\n        }\r\n    }\r\n\r\n    filterPets = () => {\r\n        if(!this.props.activeFilter){\r\n            this.setState({\r\n                pets: this.state._pets.filter((pet) => {\r\n                    return stringContains(pet.name, this.props.searchValue)\r\n                })\r\n            })\r\n        }else{\r\n            this.setState({\r\n                pets: this.state._pets.filter((pet) => {\r\n                    return pet.breed === this.props.activeFilter;\r\n                }).filter((filteredPet) => {\r\n                    return stringContains(filteredPet.name, this.props.searchValue)\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        const Yukleniyor = <div>Yukleniyor</div>;\r\n        const EmptyPets = <div>Bulunamadı</div>;\r\n        const Pets =  [<h3>Gösterilen Pet Sayısı: 5</h3>,<div className=\"row\">\r\n            {\r\n                this.state.pets.map((pet) => {\r\n                    return <Pet key={Math.random()} {...pet} />\r\n                })\r\n            }\r\n        </div>];\r\n        if(this.state.yukleniyor){\r\n            return Yukleniyor;\r\n        }else if(this.state.pets.length === 0){\r\n            return EmptyPets\r\n        }else{\r\n            return Pets;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default PetList;\r\n","import React from 'react';\r\n\r\n\r\nfunction Pet(props) {\r\n    const {name, image, age, description, breed} = props;\r\n    return (\r\n        <div className=\"col-lg-6 col-md-4 mb-4\">\r\n            <div className=\"card h-100\">\r\n                <a href=\"#\"><img className=\"card-img-top\" src={image} alt=\"\" style={{height: \"292px\"}}/></a>\r\n                <div className=\"card-body\">\r\n                    <h4 className=\"card-title\">\r\n                        <a href=\"#\">{name}</a>\r\n                        <div>\r\n                            <span className=\"badge badge-primary\" style={{fontSize: \"12px\"}}>{breed}</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"badge badge-warning\" style={{fontSize: \"12px\"}}>{age}</span>\r\n                        </div>\r\n                    </h4>\r\n                    <p className=\"card-text\">\r\n                        {description}\r\n                    </p>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                    <div className=\"btn btn-success\">Favorilere Ekle</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pet;\r\n","import React from 'react';\r\nimport {breedOptions} from \"../constants\";\r\nimport classNames from \"classnames\";\r\n\r\nfunction Filters(props) {\r\n    console.log(props.activeFilter);\r\n    return (\r\n        <div>\r\n            <h4 className=\"my-4 text-left\">Cins</h4>\r\n            <ul>\r\n                <li className={\r\n                    classNames({\r\n                        \"list-group-item\": true,\r\n                        \"active\": !props.activeFilter,\r\n                    })\r\n                } onClick={() => {\r\n                    props.onFilterPets(\"\");\r\n                }}>Hepsi</li>\r\n                {\r\n                    breedOptions.map((breed) => {\r\n                        return <li\r\n                            key={breed}\r\n                            className={classNames({\r\n                                \"list-group-item\": true,\r\n                                \"active\": breed === props.activeFilter\r\n                                }\r\n                            )}\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                props.onFilterPets(breed);\r\n                            }}>{breed}</li>\r\n                    })\r\n                }\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Filters;\r\n","import React from 'react';\r\n\r\nclass Search extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            value: \"\"\r\n        };\r\n    }\r\n\r\n    changeValue = (e) => {\r\n        const val = e.target.value;\r\n        this.setState({\r\n            value: val\r\n        }, () => {\r\n            this.props.onSearch(val);\r\n        });\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h4>Arama</h4>\r\n                <input type=\"text\"\r\n                       value={this.state.value}\r\n                       onChange={this.changeValue}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Header, Main} from \"./components\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}